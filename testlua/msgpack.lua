test={
	Sid="1",
	Int8=8,
	Int16=16,
	Int32=32,
	Int64=64,
	Int=100,
	Float32=32.32,
	Float64=64.64,
	String=[[
	1
	2
	3
	4
	5
	]],
	Bool=true,
	Int8s={8,8,8,8},
	Int16s={16,16,16,16},
	Int32s={32,32,32,32},
	Int64s={64,64,64},
	Ints={100,100,100},
	Float32s={32.32,32.32},
	Float64s={64.64,64.64},
	Strings={[[string
	a]],[[string
	b]]},
	Bools={true,false,true,false},
	Map_Int_Int={
		["1"]=1,
		["2"]=2
	},
	Map_Int_String={
		["1"]="1str",
		["2"]="2str"
	},
	Map_Int_Strings={
		["1"]={"1str","2str"},
		["2"]={"2str","3str"}
	},
	Map_String_Ints={
		aa={1,2,3},
		bb={1,2,3}
	},
	Map_String_Strings={
		aa={"1str","2str","3str"},
		bb={"1str","2str","3str"}
	},
	Struct={
		aa=1,
		bb=2,
		cc={
			cc=3,
			dd=4,
		}
	},
	Structs={
		{
			aa=1,
			bb=2,
			cc={
				cc=3,
				dd=4,
			}
		},
		{
			aa=1,
			bb=2,
			cc={
				cc=3,
				dd=4,
			}
		}
	},
	Structss={
		{
			{
				aa=1,
				bb=2,
				cc={
					cc=3,
					dd=4,
				}
			},
			{
				aa=1,
				bb=2,
				cc={
					cc=3,
					dd=4,
				}
			}
		},
		{
			{
				aa=1,
				bb=2,
				cc={
					cc=3,
					dd=4,
				}
			},
			{
				aa=1,
				bb=2,
				cc={
					cc=3,
					dd=4,
				}
			}
		}
	},
	Map_String_Struct={
		aa={
			aa=1,
			bb=2,
			cc={
				cc=3,
				dd=4,
			}
		},
		bb={
			aa=1,
			bb=2,
			cc={
				cc=3,
				dd=4,
			}
		}
	},
	Map_Int_Struct={
		["1"]={
			aa=1,
			bb=2,
			cc={
				cc=3,
				dd=4,
			}
		},
		["2"]={
			aa=1,
			bb=2,
			cc={
				cc=3,
				dd=4,
			}
		}
	},
	Map_Int_Structs={
		["1"]={
			{
				aa=1,
				bb=2,
				cc={
					cc=3,
					dd=4,
				}
			},
			{
				aa=1,
				bb=2,
				cc={
					cc=3,
					dd=4,
				}
			}
		},
		["2"]={
			{
				aa=1,
				bb=2,
				cc={
					cc=3,
					dd=4,
				}
			},
			{
				aa=1,
				bb=2,
				cc={
					cc=3,
					dd=4,
				}
			}
		},
	},
	Map_String_Structs={
		aa={
			{
				aa=1,
				bb=2,
				cc={
					cc=3,
					dd=4,
				}
			},
			{
				aa=1,
				bb=2,
				cc={
					cc=3,
					dd=4,
				}
			}
		},
		bb={
			{
				aa=1,
				bb=2,
				cc={
					cc=3,
					dd=4,
				}
			},
			{
				aa=1,
				bb=2,
				cc={
					cc=3,
					dd=4,
				}
			}
		},
	},
	Map_String_Structss={
		aa={
			{
				{
					aa=1,
					bb=2,
					cc={
						cc=3,
						dd=4,
					}
				},
				{
					aa=1,
					bb=2,
					cc={
						cc=3,
						dd=4,
					}
				}
			},
			{
				{
					aa=1,
					bb=2,
					cc={
						cc=3,
						dd=4,
					}
				},
				{
					aa=1,
					bb=2,
					cc={
						cc=3,
						dd=4,
					}
				}
			}
		},
		bb={
			{
				{
					aa=1,
					bb=2,
					cc={
						cc=3,
						dd=4,
					}
				},
				{
					aa=1,
					bb=2,
					cc={
						cc=3,
						dd=4,
					}
				}
			},
			{
				{
					aa=1,
					bb=2,
					cc={
						cc=3,
						dd=4,
					}
				},
				{
					aa=1,
					bb=2,
					cc={
						cc=3,
						dd=4,
					}
				}
			}
		},
	}
}

local mp = require 'MessagePack'
local function hexadump (s)
    return (s:gsub('.', function (c) return string.format('%d ', c:byte()) end))
end


mpac = mp.pack(test)
print(hexadump(mpac))
